1. Գրել ծրագիր, որը կարտածի [0, 20] միջակայքի զույգ թվերը։ Օգտագործել while ցիկլ։

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ #!/bin/bash

Hayko@DESKTOP-FRVP
Q6D MINGW64 ~ (master)
$ num=0

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ while [ $num -le 20 ]; do
> echo $num
> num=$((num + 2))
> done
0
2
4
6
8
10
12
14
16
18
20

2. Կատարել 1-ին առաջադրանքը՝ օգտագործելով until ցիկլ։ 

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ num=0

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ until [ $num -gt 20 ]; do
> echo $num
> num=$((num + 2))
> done
0
2
4
6
8
10
12
14
16
18
20


3. Գրել ծրագիր, որը գտնվում է անվերջ ցիկլի մեջ։ Ցիկլի յուրաքանչյուր 
իտերացիայում արտածել տվյալ ինդեքսի քառակուսին։ Ցիկլը ավարտել այն պահին,
 երբ արտածվող թիվը կգերազանցի 1000։ Օգտագործել while ցիկլ։ 

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ index=1

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ while true; do
> square=$((index * index))
> echo $square
> if [ $square -gt 1000 ]; then
> break
> fi
> index=$((index + 1))
> done
1
4
9
16
25
36
49
64
81
100
121
144
169
196
225
256
289
324
361
400
441
484
529
576
625
676
729
784
841
900
961
1024


4. Կատարել 1-ին առաջադրանքը՝ օգտագործելով for ցիկլ։ 

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ for ((num=0; num<=20; num+=2)); do
> echo $num
> done
0
2
4
6
8
10
12
14
16
18
20

5. Գրել ծրագիր, որը որպես մուտքային տվյալ կստանա ամբողջ թիվ և կարտածի դրա կրկնապատիկը։
 Ծրագիրը սկսելիս ցուցադրել հետևյալ հաղորդագրությունը․ Enter an integer number, or enter q to quit: 
Ամբողջ թիվ մուտքագրելուց հետո ցուցադրել դրա կրկնապատիկը, և  կրկին ցուցադրել հաղորդագրությունը՝ մինչև q տառի սեղմումը։ 

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ while true; do
> echo "Enter an integer number, or enter q to quit:"
> read input
> if [ "$input" == "q" ]; then
> break
> fi
> if [[ ! $input =~ ^[0-9]+$ ]]; then
> echo "Invalid input. Please enter an integer."
> continue
> fi
> double=$((input * 2))
> echo "Double: $double"
> done
Enter an integer number, or enter q to quit:
4
Double: 8
Enter an integer number, or enter q to quit:
2
Double: 4
Enter an integer number, or enter q to quit:
q


6. Գրել ծրագիր, որը կստեղծի /home/student դիրեկտորիայի տեքստային ֆայլերի անունները պարունակող ֆայլ։ while ցիկլի միջոցով համարակալել այս ֆայլերի անունները և արտածել։ 

 ls ~/c/Users/Professional/lab7/*.txt > file_names.txt
   
    count=1
    while read -r filename; do
        echo "File $count: $filename"
        count=$((count + 1))
    done < file_names.txt

//ստեղծում ենք lab7 դիրեկտորիայի տեքստային ֆայլերի անունները պարունակող ֆայլ
// while ցիկլի միջոցով համարակալում ենք ֆայլերի անունները և արտածում


7. Գրել ծրագիր, որը for ցիկլի միջոցով կարտածի [0, 30] միջակայքում գտնվող 3-ի բազմապատիկ թվերը։ 

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ for ((i=0; i<=30; i+=3)); do
> echo $i
> done
0
3
6
9
12
15
18
21
24
27
30

8. Գրել ծրագիր, որը for ցիկլի միջոցով կարտածի ընթացիկ դիրեկտորիայի բոլոր տեքստային ֆայլերի անունները։ 

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ for file in *.txt; do
> echo $file
> done
file_name.txt
file_names.txt
new_file.txt


9. Գրել ծրագիր, որը որպես արգումենտ կստանա ֆայլերի անուններ, և այդ ֆայլերից յուրաքանչյուրի համար կարտածի ֆայլի ամենակարճ բառը և դրա երկարությունը։ 

Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ for file in "$@"; do
> if [[ -r $file ]]; then
> shortest=""
> length=9999
> while read -r word; do
> if (( ${#word} < length && ${#word}!=0)); then
> shortest=$word
> length=${#word}
> fi
> done < "$file"
> echo "File: $file | Shortest word: '$shortest' | Length: $length"
> else
> echo "$file: File is not readable"
> fi
> done

//${#word} `word փոփոխականի տողի երկարությունը



10. Գրել ծրագիր, որը որպես արգումենտներ կստանա ֆայլերի անուններ, և դրանցից յուրաքանչյուրի համար կստուգի, թե արդյո՞ք տվյալ ֆայլը գոյություն ունի, թե ոչ։ 
Գոյություն ունենալու դեպքում ստուգել, թե արդյո՞ք ֆայլն ունի կարդալու թույլտվություն։ Արտածել համապատասխան հաղորդագրություններ։ 


Hayko@DESKTOP-FRVPQ6D MINGW64 ~ (master)
$ for file in "$@"; do
> if [ -e "$file" ]; then
> if [ -r "$file" ]; then
> echo "$file: File exists and is readable."
> else
> echo "$file: File exists, but isn't readable."
> fi
> else
> echo "$file: File doesn't exist."
> fi
> done



